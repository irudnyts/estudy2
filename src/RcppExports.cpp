// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// getMultiDayRates
NumericMatrix getMultiDayRates(NumericMatrix prices, bool continuous, bool Open);
RcppExport SEXP _estudy2_getMultiDayRates(SEXP pricesSEXP, SEXP continuousSEXP, SEXP OpenSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type prices(pricesSEXP);
    Rcpp::traits::input_parameter< bool >::type continuous(continuousSEXP);
    Rcpp::traits::input_parameter< bool >::type Open(OpenSEXP);
    rcpp_result_gen = Rcpp::wrap(getMultiDayRates(prices, continuous, Open));
    return rcpp_result_gen;
END_RCPP
}
// getSingleDayRates
NumericMatrix getSingleDayRates(NumericMatrix prices, bool continuous);
RcppExport SEXP _estudy2_getSingleDayRates(SEXP pricesSEXP, SEXP continuousSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type prices(pricesSEXP);
    Rcpp::traits::input_parameter< bool >::type continuous(continuousSEXP);
    rcpp_result_gen = Rcpp::wrap(getSingleDayRates(prices, continuous));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_estudy2_getMultiDayRates", (DL_FUNC) &_estudy2_getMultiDayRates, 3},
    {"_estudy2_getSingleDayRates", (DL_FUNC) &_estudy2_getSingleDayRates, 2},
    {NULL, NULL, 0}
};

RcppExport void R_init_estudy2(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
