% Generated by roxygen2 (4.1.1): do not edit by hand
% Please edit documentation in R/get_rates_from_prices.R
\name{get_rates_from_prices}
\alias{get_rates_from_prices}
\title{Calculate rates of return for given prices.}
\usage{
get_rates_from_prices(prices, quote = c("Open", "Close"), multi_day = TRUE,
  compounding = c("discrete", "continuous"))
}
\arguments{
\item{prices}{the object either of class \code{list}, or \code{data.frame},
or \code{zoo}. Represents prices, from with the rates of returns will be
calculated.}

\item{quote}{character, which specifies the type of quote: "Open" or "Close".
By default is "Open".}

\item{multi_day}{logical, is rate of return between more than 1 day is
allowed?}

\item{compounding}{character, defines the type of compounting: "discrete" or
"continuous". By default is "continuous".}
}
\value{
The rates of retunrs of the same class as prices.
}
\description{
\code{get_rates_from_prices} is used for computing rates of returns from
prices for different classes.
}
\details{
The generic function, dispatched for such classes as \code{list},
\code{data.frame}, and \code{zoo}, which represent prices.

The calculation is made in C++ (\code{Rcpp}) for high performance.

The correspondens between dates and values of the rates depends on the quote,
which can be either Open or Close. If the quote is Open, than the value of
rate belongs to the first date. Otherwise, to the last. This is also applied
for the algorithm, if multiday is allowed: the value of the rate of return
is assigned to the last day in case of Close price, and to the first day in
in case of Open quote.

The \code{multi_day} parameter specifies what to do with missed values and
handling of the weekend. If it is TRUE, the function ignores misseing values
and the rates are calculated between non-missing prices. If it is FALSE, than
only one-day period rates of return are computed (between two consecutive
calendar dates).

The function uses either continuous (by default) or descrete (periodic)
compounding.
}

